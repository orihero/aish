{
  "info": {
    "name": "Vuexy API",
    "description": "Complete collection for Vuexy job board API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set environment variables",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:5000');",
          "}",
          "",
          "// Handle authentication token",
          "if (pm.response.code === 200 && pm.response.json().token) {",
          "    pm.environment.set('token', pm.response.json().token);",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Auth",
      "description": "Authentication and user management endpoints",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"role\": \"employer\"\n}",
              "description": "User registration payload"
            },
            "description": "Register a new user with email, password, and role"
          }
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}",
              "description": "User login credentials"
            },
            "description": "Authenticate user and receive JWT token"
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current user's profile information"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\"\n}",
              "description": "Email for password reset"
            },
            "description": "Request password reset link"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"token\": \"reset-token\",\n    \"password\": \"newpassword123\"\n}",
              "description": "Reset token and new password"
            },
            "description": "Reset password using token"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"+1234567890\"\n}",
              "description": "Updated profile information"
            },
            "description": "Update user profile information"
          }
        }
      ]
    },
    {
      "name": "Categories",
      "description": "Category management endpoints",
      "item": [
        {
          "name": "Get Categories",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            },
            "description": "Get all job categories with their subcategories"
          }
        },
        {
          "name": "Get Category Stats",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/categories/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "stats"]
            },
            "description": "Get statistics for all categories"
          }
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": [{\n        \"language\": \"en\",\n        \"value\": \"Technology\"\n    }],\n    \"icon\": \"computer\",\n    \"subcategories\": [{\n        \"title\": [{\n            \"language\": \"en\",\n            \"value\": \"Web Development\"\n        }],\n        \"icon\": \"code\"\n    }]\n}",
              "description": "Category creation payload"
            },
            "description": "Create a new job category"
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "category-id",
                  "description": "ID of the category to update"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": [{\n        \"language\": \"en\",\n        \"value\": \"Updated Technology\"\n    }],\n    \"icon\": \"laptop\"\n}",
              "description": "Updated category information"
            },
            "description": "Update an existing category"
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "category-id",
                  "description": "ID of the category to delete"
                }
              ]
            },
            "description": "Delete a category"
          }
        }
      ]
    },
    {
      "name": "Vacancies",
      "description": "Job vacancy management endpoints",
      "item": [
        {
          "name": "Get Featured Vacancies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/vacancies/featured",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies", "featured"]
            },
            "description": "Get featured job vacancies"
          }
        },
        {
          "name": "Get Newest Vacancies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/vacancies/newest",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies", "newest"]
            },
            "description": "Get newest job vacancies"
          }
        },
        {
          "name": "Get Vacancies",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/vacancies?search=react&category=tech&employmentType=full-time&workType=remote&salaryMin=80000&salaryMax=120000&featured=true&sort=newest&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies"],
              "query": [
                {
                  "key": "search",
                  "value": "react",
                  "description": "Search term for job title, company, or description"
                },
                {
                  "key": "category",
                  "value": "tech",
                  "description": "Filter by category ID"
                },
                {
                  "key": "employmentType",
                  "value": "full-time",
                  "description": "Filter by employment type (full-time, part-time, contract, internship)"
                },
                {
                  "key": "workType",
                  "value": "remote",
                  "description": "Filter by work type (remote, hybrid, on-site)"
                },
                {
                  "key": "salaryMin",
                  "value": "80000",
                  "description": "Minimum salary range"
                },
                {
                  "key": "salaryMax",
                  "value": "120000",
                  "description": "Maximum salary range"
                },
                {
                  "key": "featured",
                  "value": "true",
                  "description": "Filter featured jobs only"
                },
                {
                  "key": "sort",
                  "value": "newest",
                  "description": "Sort by: newest, mostViewed, salaryHigh, salaryLow"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Get list of job vacancies with filtering and pagination"
          }
        },
        {
          "name": "Get Vacancy",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/vacancies/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "vacancy-id",
                  "description": "ID of the vacancy to retrieve"
                }
              ]
            },
            "description": "Get details of a specific vacancy"
          }
        },
        {
          "name": "Create Vacancy",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vacancies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Senior React Developer\",\n    \"category\": \"category-id\",\n    \"subcategory\": \"subcategory-id\",\n    \"description\": \"We are looking for a Senior React Developer...\",\n    \"salary\": {\n        \"min\": 80000,\n        \"max\": 120000,\n        \"currency\": \"USD\"\n    },\n    \"employmentType\": \"full-time\",\n    \"workType\": \"remote\"\n}",
              "description": "Vacancy creation payload"
            },
            "description": "Create a new job vacancy"
          }
        },
        {
          "name": "Update Vacancy",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vacancies/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "vacancy-id",
                  "description": "ID of the vacancy to update"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Senior React Developer\",\n    \"description\": \"Updated job description...\",\n    \"salary\": {\n        \"min\": 90000,\n        \"max\": 130000\n    }\n}",
              "description": "Updated vacancy information"
            },
            "description": "Update an existing vacancy"
          }
        },
        {
          "name": "Delete Vacancy",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vacancies/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "vacancy-id",
                  "description": "ID of the vacancy to delete"
                }
              ]
            },
            "description": "Delete a vacancy"
          }
        }
      ]
    },
    {
      "name": "Resumes",
      "description": "Resume management endpoints",
      "item": [
        {
          "name": "Analyze Resume",
          "request": {
            "method": "POST",
            "url": {
              "raw": "{{baseUrl}}/api/resumes/analyze",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", "analyze"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "cvFile",
                  "type": "file",
                  "src": "/path/to/resume.pdf",
                  "description": "PDF file of the resume to analyze"
                }
              ]
            },
            "description": "Analyze a resume file and extract information"
          }
        },
        {
          "name": "Register with Resume",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", "register"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"password123\",\n  \"parsedData\": {\n    \"basics\": {\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\",\n      \"phone\": \"+1234567890\",\n      \"summary\": \"Experienced software engineer...\"\n    },\n    \"skills\": [\n      {\n        \"name\": \"JavaScript\",\n        \"level\": \"Advanced\",\n        \"keywords\": [\"React\", \"Node.js\", \"TypeScript\"]\n      }\n    ],\n    \"languages\": [\n      {\n        \"language\": \"English\",\n        \"fluency\": \"Native\"\n      }\n    ],\n    \"work\": [\n      {\n        \"name\": \"Tech Company\",\n        \"position\": \"Senior Developer\",\n        \"startDate\": \"2020-01\",\n        \"endDate\": \"2023-12\",\n        \"summary\": \"Led development of...\"\n      }\n    ],\n    \"education\": [\n      {\n        \"institution\": \"University of Technology\",\n        \"area\": \"Computer Science\",\n        \"studyType\": \"Bachelor\",\n        \"startDate\": \"2016-09\",\n        \"endDate\": \"2020-06\"\n      }\n    ]\n  }\n}",
              "description": "User registration with parsed resume data"
            },
            "description": "Register a new user with parsed resume data"
          }
        },
        {
          "name": "Create Resume",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "My Software Engineer Resume",
                  "type": "text",
                  "description": "Name of the resume"
                },
                {
                  "key": "cvFile",
                  "type": "file",
                  "src": "/path/to/resume.pdf",
                  "description": "PDF file of the resume"
                }
              ]
            },
            "description": "Upload a new resume"
          }
        },
        {
          "name": "Get My Resumes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/my",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", "my"]
            },
            "description": "Get all resumes for the current user"
          }
        },
        {
          "name": "Get Resume",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "resume-id",
                  "description": "ID of the resume to retrieve"
                }
              ]
            },
            "description": "Get details of a specific resume"
          }
        },
        {
          "name": "Update Resume",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "resume-id",
                  "description": "ID of the resume to update"
                }
              ]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Updated Resume Name",
                  "type": "text",
                  "description": "New name for the resume"
                },
                {
                  "key": "cvFile",
                  "type": "file",
                  "src": "/path/to/updated-resume.pdf",
                  "description": "Updated PDF file"
                }
              ]
            },
            "description": "Update an existing resume"
          }
        },
        {
          "name": "Delete Resume",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "resume-id",
                  "description": "ID of the resume to delete"
                }
              ]
            },
            "description": "Delete a resume"
          }
        },
        {
          "name": "Update Parsed Data",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/:id/parsed-data",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", ":id", "parsed-data"],
              "variable": [
                {
                  "key": "id",
                  "value": "resume-id",
                  "description": "ID of the resume to update"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"basics\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"summary\": \"Updated professional summary...\"\n  },\n  \"skills\": [\n    {\n      \"name\": \"JavaScript\",\n      \"level\": \"Expert\",\n      \"keywords\": [\"React\", \"Node.js\"]\n    }\n  ]\n}",
              "description": "Updated parsed resume data"
            },
            "description": "Update parsed data for a resume"
          }
        },
        {
          "name": "Download Resume PDF",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/:id/download-pdf",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", ":id", "download-pdf"],
              "variable": [
                {
                  "key": "id",
                  "value": "resume-id",
                  "description": "ID of the resume to download"
                }
              ]
            },
            "description": "Download resume PDF file"
          }
        }
      ]
    },
    {
      "name": "Applications",
      "description": "Job application management endpoints",
      "item": [
        {
          "name": "Create Application",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resumes/:resumeId/apply/:vacancyId",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resumes", ":resumeId", "apply", ":vacancyId"],
              "variable": [
                {
                  "key": "resumeId",
                  "value": "resume-id",
                  "description": "ID of the resume to use for application"
                },
                {
                  "key": "vacancyId",
                  "value": "vacancy-id",
                  "description": "ID of the vacancy to apply for"
                }
              ]
            },
            "description": "Apply for a job using a specific resume"
          }
        },
        {
          "name": "Get My Applications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/applications/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "applications", "me"]
            },
            "description": "Get all job applications for the current user"
          }
        },
        {
          "name": "Get Application",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/applications/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "applications", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "application-id",
                  "description": "ID of the application to retrieve"
                }
              ]
            },
            "description": "Get details of a specific application"
          }
        },
        {
          "name": "Update Application Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/applications/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "applications", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "application-id",
                  "description": "ID of the application to update"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"interview\"\n}",
              "description": "New status for the application"
            },
            "description": "Update the status of an application"
          }
        },
        {
          "name": "Get Applications for Vacancy",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vacancies/:vacancyId/applications",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vacancies", ":vacancyId", "applications"],
              "variable": [
                {
                  "key": "vacancyId",
                  "value": "vacancy-id",
                  "description": "ID of the vacancy to get applications for"
                }
              ]
            },
            "description": "Get all applications for a specific vacancy"
          }
        },
        {
          "name": "Get Application Chat",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/applications/:id/chat",
              "host": ["{{baseUrl}}"],
              "path": ["api", "applications", ":id", "chat"],
              "variable": [
                {
                  "key": "id",
                  "value": "application-id",
                  "description": "ID of the application to get chat for"
                }
              ]
            },
            "description": "Get chat details for a specific application"
          }
        },
        {
          "name": "Send Application Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/applications/:id/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "applications", ":id", "messages"],
              "variable": [
                {
                  "key": "id",
                  "value": "application-id",
                  "description": "ID of the application to send message to"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"Hello, I'm interested in this position\"\n}",
              "description": "Message content to send"
            },
            "description": "Send a message in an application chat"
          }
        },
        {
          "name": "Get Application Messages",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/applications/:id/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "applications", ":id", "messages"],
              "variable": [
                {
                  "key": "id",
                  "value": "application-id",
                  "description": "ID of the application to get messages for"
                }
              ]
            },
            "description": "Get all messages for a specific application"
          }
        }
      ]
    },
    {
      "name": "Chats",
      "description": "Chat management endpoints",
      "item": [
        {
          "name": "Get Chat",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chats/:chatId",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chats", ":chatId"],
              "variable": [
                {
                  "key": "chatId",
                  "value": "chat-id",
                  "description": "ID of the chat to retrieve"
                }
              ]
            },
            "description": "Get chat messages and details"
          }
        },
        {
          "name": "Get My Chats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chats/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chats", "me"]
            },
            "description": "Get all chats for the current user"
          }
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chats/:chatId/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chats", ":chatId", "messages"],
              "variable": [
                {
                  "key": "chatId",
                  "value": "chat-id",
                  "description": "ID of the chat to send message to"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"Hello, I'm interested in this position\"\n}",
              "description": "Message content to send"
            },
            "description": "Send a message in a chat"
          }
        },
        {
          "name": "Evaluate Candidate",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/chats/:chatId/evaluate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "chats", ":chatId", "evaluate"],
              "variable": [
                {
                  "key": "chatId",
                  "value": "chat-id",
                  "description": "ID of the chat to evaluate"
                }
              ]
            },
            "description": "Get AI evaluation of the candidate based on chat history"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string",
      "description": "Base URL for API requests"
    },
    {
      "key": "token",
      "value": "{{token}}",
      "type": "string",
      "description": "JWT authentication token"
    }
  ]
}